import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d.art3d import Poly3DCollection
from mpl_toolkits.mplot3d import Axes3D
def line_intersection(p1, p2, mask):
    """ Return the intersection point of two line segments (p1,p2) and (p3,p4) """
    s1_x = p2[0] - p1[0]
    s1_y = p2[1] - p1[1]
    n = len(mask)
    for i in range(0, n):
        p3 = mask[i]
        p4 = mask[(i+1)%n]
        s2_x = p4[0] - p3[0]
        s2_y = p4[1] - p3[1]

        s = (-s1_y * (p1[0] - p3[0]) + s1_x * (p1[1] - p3[1])) / (-s2_x * s1_y + s1_x * s2_y)
        t = (s2_x * (p1[1] - p3[1]) - s2_y * (p1[0] - p3[0])) / (-s2_x * s1_y + s1_x * s2_y)

        if 0 <= s <= 1 and 0 <= t <= 1:
            # Collision detected
            intersection_x = p1[0] + (t * s1_x)
            intersection_y = p1[1] + (t * s1_y)
            return (intersection_x, intersection_y)
    return None

def clip_paths(mask, lines):
    npath = []
    # Check all segments of path1 against all segments of path2
    lj = 0
    n = len(lines)
    for lj in range(0, n):
        if not is_in_poly(lines[lj], mask):
            if is_in_poly(lines[(lj + 1)%n], mask):
                # chen giao diem
                npath.append(line_intersection(lines[lj], lines[lj+1], mask))

        else: # diem dang xet dang o trong
            npath.append(lines[lj])
            if not is_in_poly(lines[lj + 1], mask):
                npath.append(line_intersection(lines[lj], lines[lj+1], mask))
    return npath        

           

def is_in_poly(point, polygon):
    """Determines if a point is inside a polygon using the ray-casting algorithm.
    
    Args:
        point (tuple): The point as (x, y) coordinates.
        polygon (list): A list of vertices of the polygon [(x1, y1), (x2, y2), ...].
    
    Returns:
        bool: True if the point is inside the polygon, False otherwise.
    """
    x, y = point
    n = len(polygon)
    inside = False

    # Loop through each edge of the polygon
    for i in range(n):
        x1, y1 = polygon[i]
        x2, y2 = polygon[(i + 1) % n]  # Next vertex (wraps around to the first vertex)
        
        # Check if the ray crosses the edge
        if min(y1, y2) < y <= max(y1, y2) and x <= max(x1, x2):
            # Compute the intersection point of the edge with the horizontal ray at y
            if y1 != y2:
                x_intersect = (y - y1) * (x2 - x1) / (y2 - y1) + x1
            if x1 == x2 or x <= x_intersect:
                inside = not inside

    return inside
def add_z_coordinate(points, z_value):
    """Add a fixed z-coordinate to a list of 2D points."""
    return np.array([[p[0], p[1], z_value] for p in points])

def plot_segments(ax, points, color, marker=''):
    """Plot consecutive segments in 3D given a list of points and a color."""
    for i in range(len(points) - 1):
        ax.plot([points[i][0], points[i+1][0]], 
                [points[i][1], points[i+1][1]], 
                [points[i][2], points[i+1][2]], color=color, marker=marker)

# Example paths
mask = [[-27.043, 3.438], [-28.549, 4.052], [-28.736, 4.133], [-30.225, 4.781], [-30.41, 4.867], [-31.88, 5.553], [-32.114, 5.671], [-33.448, 6.326], [-33.533, 6.199], [-33.684, 5.972], [-33.817, 5.773], [-33.909, 5.635], [-34.256, 5.115], [-34.499, 4.75], [-37.998, 7.11], [-42.427, 10.03], [-47.347, 13.35], [-49.848, 14.987], [-49.988, 15.046], [-49.996, 15.046], [-50.001, 15.045], [-50.288, 14.869], [-50.603, 14.581], [-50.92, 14.106], [-50.988, 14.003], [-51.072, 13.771], [-51.133, 13.601], [-51.148, 13.503], [-51.185, 13.269], [-51.184, 13.264], [-51.184, 13.262], [-51.069, 13.157], [-46.149, 9.836], [-43.647, 8.199], [-41.854, 6.992], [-35.72, 2.919], [-36.168, 2.247], [-36.311, 2.032], [-36.39, 1.913], [-36.564, 1.653], [-36.653, 1.519], [-35.385, -2.314], [-34.834, -3.935], [-32.846, -9.899], [-32.507, -10.752], [-32.44, -10.92], [-32.006, -11.73], [-31.92, -11.889], [-31.398, -12.644], [-31.294, -12.793], [-30.689, -13.484], [-30.57, -13.62], [-29.891, -14.238], [-29.757, -14.36], [-29.012, -14.897], [-28.865, -15.003], [-28.064, -15.452], [-27.906, -15.541], [-27.059, -15.896], [-26.892, -15.966], [-26.01, -16.224], [-25.836, -16.274], [-24.931, -16.43], [-24.753, -16.461], [-23.836, -16.513], [-23.655, -16.523], [38.95, -16.523], [41.243, -16.533], [46.694, -16.524], [47.089, -16.453], [47.162, -16.436], [48.317, -16.166], [48.488, -16.126], [49.643, -15.8], [49.813, -15.752], [50.428, -15.54], [50.519, -15.509], [50.63, -15.462], [51.227, -15.194], [51.301, -15.171], [51.309, -15.16], [51.446, -15.088], [51.448, -15.086], [51.526, -15.028], [51.585, -14.979], [51.588, -14.976], [51.652, -14.9], [51.656, -14.893], [51.706, -14.809], [51.71, -14.799], [51.744, -14.705], [51.745, -14.692], [51.755, -14.594], [51.753, -14.581], [51.744, -14.489], [51.74, -14.478], [51.711, -14.392], [51.706, -14.383], [51.658, -14.292], [51.653, -14.286], [51.591, -14.206], [51.588, -14.203], [51.554, -14.171], [51.487, -14.114], [51.486, -14.113], [51.433, -14.076], [51.432, -14.075], [51.383, -14.044], [51.381, -14.042], [51.335, -14.016], [51.332, -14.014], [51.33, -14.013], [51.289, -13.992], [50.847, -13.732], [50.606, -13.602], [50.529, -13.566], [49.919, -13.286], [49.764, -13.225], [48.539, -12.748], [48.384, -12.696], [47.15, -12.285], [46.994, -12.239], [45.753, -11.871], [45.512, -11.808], [43.6, -11.309], [43.358, -11.254], [41.435, -10.814], [41.193, -10.765], [39.262, -10.375], [39.019, -10.331], [37.084, -9.982], [36.459, -9.883], [31.491, -9.101], [30.868, -9.011], [25.903, -8.293], [25.43, -8.224], [21.658, -7.679], [21.186, -7.608], [17.419, -7.043], [17.022, -6.981], [13.856, -6.486], [13.46, -6.421], [10.301, -5.904], [9.906, -5.836], [6.756, -5.293], [6.362, -5.222], [3.22, -4.65], [2.569, -4.521], [-2.62, -3.494], [-2.945, -3.424], [-5.531, -2.868], [-5.855, -2.794], [-8.435, -2.205], [-8.758, -2.126], [-11.33, -1.5], [-11.652, -1.416], [-14.214, -0.748], [-14.534, -0.658], [-17.085, 0.057], [-17.403, 0.154], [-19.939, 0.922], [-20.327, 1.051], [-23.42, 2.082], [-23.803, 2.224], [-26.854, 3.361], [-27.043, 3.438]]
lines = [(52.5, 17.5), (55.0, 13.5198), (52.5, 12.5), (55.0, 8.5198), (52.5, 7.5), (55.0, 3.5198), (52.5, 2.5), (55.0, -1.4802), (52.5, -2.5), (55.0, -6.4802), (52.5, -7.5), (55.0, -11.4802), (52.5, -12.5), (55.0, -16.4802), (52.5, -17.5), (47.5, -17.5), (50.0, -16.4802), (47.5, -12.5), (50.0, -11.4802), (47.5, -7.5), (50.0, -6.4802), (47.5, -2.5), (50.0, -1.4802), (47.5, 2.5), (50.0, 3.5198), (47.5, 7.5), (50.0, 8.5198), (47.5, 12.5), (50.0, 13.5198), (47.5, 17.5), (42.5, 17.5), (45.0, 13.5198), (42.5, 12.5), (45.0, 8.5198), (42.5, 7.5), (45.0, 3.5198), (42.5, 2.5), (45.0, -1.4802), (42.5, -2.5), (45.0, -6.4802), (42.5, -7.5), (45.0, -11.4802), (42.5, -12.5), (45.0, -16.4802), (42.5, -17.5), (37.5, -17.5), (40.0, -16.4802), (37.5, -12.5), (40.0, -11.4802), (37.5, -7.5), (40.0, -6.4802), (37.5, -2.5), (40.0, -1.4802), (37.5, 2.5), (40.0, 3.5198), (37.5, 7.5), (40.0, 8.5198), (37.5, 12.5), (40.0, 13.5198), (37.5, 17.5), (32.5, 17.5), (35.0, 13.5198), (32.5, 12.5), (35.0, 8.5198), (32.5, 7.5), (35.0, 3.5198), (32.5, 2.5), (35.0, -1.4802), (32.5, -2.5), (35.0, -6.4802), (32.5, -7.5), (35.0, -11.4802), (32.5, -12.5), (35.0, -16.4802), (32.5, -17.5), (27.5, -17.5), (30.0, -16.4802), (27.5, -12.5), (30.0, -11.4802), (27.5, -7.5), (30.0, -6.4802), (27.5, -2.5), (30.0, -1.4802), (27.5, 2.5), (30.0, 3.5198), (27.5, 7.5), (30.0, 8.5198), (27.5, 12.5), (30.0, 13.5198), (27.5, 17.5), (22.5, 17.5), (25.0, 13.5198), (22.5, 12.5), (25.0, 8.5198), (22.5, 7.5), (25.0, 3.5198), (22.5, 2.5), (25.0, -1.4802), (22.5, -2.5), (25.0, -6.4802), (22.5, -7.5), (25.0, -11.4802), (22.5, -12.5), (25.0, -16.4802), (22.5, -17.5), (17.5, -17.5), (20.0, -16.4802), (17.5, -12.5), (20.0, -11.4802), (17.5, -7.5), (20.0, -6.4802), (17.5, -2.5), (20.0, -1.4802), (17.5, 2.5), (20.0, 3.5198), (17.5, 7.5), (20.0, 8.5198), (17.5, 12.5), (20.0, 13.5198), (17.5, 17.5), (12.5, 17.5), (15.0, 13.5198), (12.5, 12.5), (15.0, 8.5198), (12.5, 7.5), (15.0, 3.5198), (12.5, 2.5), (15.0, -1.4802), (12.5, -2.5), (15.0, -6.4802), (12.5, -7.5), (15.0, -11.4802), (12.5, -12.5), (15.0, -16.4802), (12.5, -17.5), (7.5, -17.5), (10.0, -16.4802), (7.5, -12.5), (10.0, -11.4802), (7.5, -7.5), (10.0, -6.4802), (7.5, -2.5), (10.0, -1.4802), (7.5, 2.5), (10.0, 3.5198), (7.5, 7.5), (10.0, 8.5198), (7.5, 12.5), (10.0, 13.5198), (7.5, 17.5), (2.5, 17.5), (5.0, 13.5198), (2.5, 12.5), (5.0, 8.5198), (2.5, 7.5), (5.0, 3.5198), (2.5, 2.5), (5.0, -1.4802), (2.5, -2.5), (5.0, -6.4802), (2.5, -7.5), (5.0, -11.4802), (2.5, -12.5), (5.0, -16.4802), (2.5, -17.5), (-2.5, -17.5), (0.0, -16.4802), (-2.5, -12.5), (0.0, -11.4802), (-2.5, -7.5), (0.0, -6.4802), (-2.5, -2.5), (0.0, -1.4802), (-2.5, 2.5), (0.0, 3.5198), (-2.5, 7.5), (0.0, 8.5198), (-2.5, 12.5), (0.0, 13.5198), (-2.5, 17.5), (-7.5, 17.5), (-5.0, 13.5198), (-7.5, 12.5), (-5.0, 8.5198), (-7.5, 7.5), (-5.0, 3.5198), (-7.5, 2.5), (-5.0, -1.4802), (-7.5, -2.5), (-5.0, -6.4802), (-7.5, -7.5), (-5.0, -11.4802), (-7.5, -12.5), (-5.0, -16.4802), (-7.5, -17.5), (-12.5, -17.5), (-10.0, -16.4802), (-12.5, -12.5), (-10.0, -11.4802), (-12.5, -7.5), (-10.0, -6.4802), (-12.5, -2.5), (-10.0, -1.4802), (-12.5, 2.5), (-10.0, 3.5198), (-12.5, 7.5), (-10.0, 8.5198), (-12.5, 12.5), (-10.0, 13.5198), (-12.5, 17.5), (-17.5, 17.5), (-15.0, 13.5198), (-17.5, 12.5), (-15.0, 8.5198), (-17.5, 7.5), (-15.0, 3.5198), (-17.5, 2.5), (-15.0, -1.4802), (-17.5, -2.5), (-15.0, -6.4802), (-17.5, -7.5), (-15.0, -11.4802), (-17.5, -12.5), (-15.0, -16.4802), (-17.5, -17.5), (-22.5, -17.5), (-20.0, -16.4802), (-22.5, -12.5), (-20.0, -11.4802), (-22.5, -7.5), (-20.0, -6.4802), (-22.5, -2.5), (-20.0, -1.4802), (-22.5, 2.5), (-20.0, 3.5198), (-22.5, 7.5), (-20.0, 8.5198), (-22.5, 12.5), (-20.0, 13.5198), (-22.5, 17.5), (-27.5, 17.5), (-25.0, 13.5198), (-27.5, 12.5), (-25.0, 8.5198), (-27.5, 7.5), (-25.0, 3.5198), (-27.5, 2.5), (-25.0, -1.4802), (-27.5, -2.5), (-25.0, -6.4802), (-27.5, -7.5), (-25.0, -11.4802), (-27.5, -12.5), (-25.0, -16.4802), (-27.5, -17.5), (-32.5, -17.5), (-30.0, -16.4802), (-32.5, -12.5), (-30.0, -11.4802), (-32.5, -7.5), (-30.0, -6.4802), (-32.5, -2.5), (-30.0, -1.4802), (-32.5, 2.5), (-30.0, 3.5198), (-32.5, 7.5), (-30.0, 8.5198), (-32.5, 12.5), (-30.0, 13.5198), (-32.5, 17.5), (-37.5, 17.5), (-35.0, 13.5198), (-37.5, 12.5), (-35.0, 8.5198), (-37.5, 7.5), (-35.0, 3.5198), (-37.5, 2.5), (-35.0, -1.4802), (-37.5, -2.5), (-35.0, -6.4802), (-37.5, -7.5), (-35.0, -11.4802), (-37.5, -12.5), (-35.0, -16.4802), (-37.5, -17.5), (-42.5, -17.5), (-40.0, -16.4802), (-42.5, -12.5), (-40.0, -11.4802), (-42.5, -7.5), (-40.0, -6.4802), (-42.5, -2.5), (-40.0, -1.4802), (-42.5, 2.5), (-40.0, 3.5198), (-42.5, 7.5), (-40.0, 8.5198), (-42.5, 12.5), (-40.0, 13.5198), (-42.5, 17.5), (-47.5, 17.5), (-45.0, 13.5198), (-47.5, 12.5), (-45.0, 8.5198), (-47.5, 7.5), (-45.0, 3.5198), (-47.5, 2.5), (-45.0, -1.4802), (-47.5, -2.5), (-45.0, -6.4802), (-47.5, -7.5), (-45.0, -11.4802), (-47.5, -12.5), (-45.0, -16.4802), (-47.5, -17.5), (-52.5, -17.5), (-50.0, -16.4802), (-52.5, -12.5), (-50.0, -11.4802), (-52.5, -7.5), (-50.0, -6.4802), (-52.5, -2.5), (-50.0, -1.4802), (-52.5, 2.5), (-50.0, 3.5198), (-52.5, 7.5), (-50.0, 8.5198), (-52.5, 12.5), (-50.0, 13.5198), (-52.5, 17.5)]
mask2 = [[-34.666, 5.857], [-41.982, 10.697], [-48.804, 15.282], [-49.392, 15.672], [-49.399, 15.675], [-49.555, 15.708], [-49.72, 15.698], [-49.736, 15.696], [-49.808, 15.669], [-49.966, 15.576], [-50.07, 15.488], [-50.229, 15.353], [-50.388, 15.179], [-50.577, 14.939], [-50.769, 14.666], [-50.977, 14.355], [-51.131, 14.123], [-51.309, 13.841], [-51.387, 13.701], [-51.458, 13.574], [-51.521, 13.439], [-51.557, 13.36], [-51.604, 13.213], [-51.662, 13.032], [-51.668, 12.987], [-51.687, 12.851], [-51.685, 12.788], [-51.685, 12.774], [-51.637, 12.635], [-51.625, 12.602], [-51.595, 12.558], [-51.513, 12.49], [-44.692, 7.904], [-44.104, 7.515], [-43.781, 7.299], [-36.178, 2.231], [-36.428, 1.856], [-36.517, 1.723], [-36.632, 1.55], [-36.829, 1.255], [-36.897, 1.153], [-36.964, 1.053], [-35.892, -2.162], [-35.25, -4.074], [-33.815, -8.378], [-33.262, -10.037], [-33.142, -10.339], [-32.837, -11.105], [-32.684, -11.392], [-32.294, -12.118], [-32.109, -12.385], [-31.64, -13.063], [-31.426, -13.308], [-30.883, -13.928], [-30.643, -14.146], [-30.033, -14.701], [-29.769, -14.891], [-29.101, -15.373], [-28.817, -15.532], [-28.098, -15.935], [-27.798, -16.061], [-27.038, -16.38], [-26.726, -16.471], [-25.935, -16.702], [-25.615, -16.757], [-24.802, -16.897], [-24.478, -16.915], [-23.655, -16.962], [-8.003, -16.962], [-2.336, -16.961], [23.299, -16.961], [28.966, -16.962], [38.95, -16.962], [41.888, -16.966], [46.739, -16.966], [46.983, -16.917], [47.253, -16.86], [47.885, -16.713], [48.594, -16.547], [49.231, -16.367], [49.944, -16.166], [50.288, -16.047], [50.672, -15.915], [51.067, -15.746], [51.422, -15.592], [51.54, -15.536], [51.594, -15.508], [51.775, -15.396], [51.837, -15.358], [52.006, -15.217], [52.051, -15.179], [52.135, -15.081], [52.155, -15.058], [52.223, -14.945], [52.237, -14.921], [52.282, -14.792], [52.291, -14.766], [52.304, -14.628], [52.307, -14.601], [52.29, -14.472], [52.287, -14.446], [52.244, -14.328], [52.235, -14.303], [52.166, -14.183], [52.15, -14.155], [52.066, -14.05], [52.045, -14.023], [51.921, -13.903], [51.884, -13.867], [51.818, -13.815], [51.797, -13.797], [51.731, -13.749], [51.707, -13.732], [51.642, -13.688], [51.616, -13.67], [51.587, -13.651], [51.521, -13.62], [51.128, -13.392], [50.8, -13.211], [50.413, -13.033], [50.092, -12.885], [49.325, -12.586], [48.686, -12.337], [47.92, -12.082], [47.28, -11.868], [46.512, -11.641], [45.87, -11.451], [44.69, -11.143], [43.703, -10.885], [42.518, -10.614], [41.527, -10.388], [40.338, -10.148], [39.344, -9.947], [38.154, -9.732], [37.158, -9.552], [34.109, -9.072], [31.555, -8.669], [28.514, -8.229], [25.965, -7.861], [23.657, -7.527], [21.722, -7.247], [19.417, -6.902], [17.485, -6.612], [15.549, -6.309], [13.925, -6.055], [11.993, -5.739], [10.374, -5.474], [8.447, -5.142], [6.832, -4.864], [4.911, -4.514], [3.301, -4.221], [0.128, -3.593], [-2.531, -3.067], [-4.111, -2.727], [-5.437, -2.442], [-7.013, -2.082], [-8.335, -1.78], [-9.906, -1.398], [-11.224, -1.077], [-12.788, -0.669], [-14.1, -0.326], [-15.657, 0.11], [-16.963, 0.476], [-18.51, 0.945], [-19.808, 1.338], [-21.693, 1.966], [-23.276, 2.493], [-25.134, 3.186], [-26.694, 3.767], [-27.61, 4.141], [-28.38, 4.454], [-29.286, 4.848], [-30.046, 5.179], [-30.94, 5.596], [-31.691, 5.945], [-32.374, 6.287], [-33.202, 6.696], [-33.266, 6.599], [-33.342, 6.486], [-33.533, 6.199], [-33.64, 6.039], [-33.717, 5.923], [-33.785, 5.821], [-34.04, 5.438], [-34.666, 5.857]]
lines2 = [(52.5, 17.5), (50.0, 13.5198), (52.5, 12.5), (50.0, 8.5198), (52.5, 7.5), (50.0, 3.5198), (52.5, 2.5), (50.0, -1.4802), (52.5, -2.5), (50.0, -6.4802), (52.5, -7.5), (50.0, -11.4802), (52.5, -12.5), (50.0, -16.4802), (52.5, -17.5), (47.5, -17.5), (45.0, -16.4802), (47.5, -12.5), (45.0, -11.4802), (47.5, -7.5), (45.0, -6.4802), (47.5, -2.5), (45.0, -1.4802), (47.5, 2.5), (45.0, 3.5198), (47.5, 7.5), (45.0, 8.5198), (47.5, 12.5), (45.0, 13.5198), (47.5, 17.5), (42.5, 17.5), (40.0, 13.5198), (42.5, 12.5), (40.0, 8.5198), (42.5, 7.5), (40.0, 3.5198), (42.5, 2.5), (40.0, -1.4802), (42.5, -2.5), (40.0, -6.4802), (42.5, -7.5), (40.0, -11.4802), (42.5, -12.5), (40.0, -16.4802), (42.5, -17.5), (37.5, -17.5), (35.0, -16.4802), (37.5, -12.5), (35.0, -11.4802), (37.5, -7.5), (35.0, -6.4802), (37.5, -2.5), (35.0, -1.4802), (37.5, 2.5), (35.0, 3.5198), (37.5, 7.5), (35.0, 8.5198), (37.5, 12.5), (35.0, 13.5198), (37.5, 17.5), (32.5, 17.5), (30.0, 13.5198), (32.5, 12.5), (30.0, 8.5198), (32.5, 7.5), (30.0, 3.5198), (32.5, 2.5), (30.0, -1.4802), (32.5, -2.5), (30.0, -6.4802), (32.5, -7.5), (30.0, -11.4802), (32.5, -12.5), (30.0, -16.4802), (32.5, -17.5), (27.5, -17.5), (25.0, -16.4802), (27.5, -12.5), (25.0, -11.4802), (27.5, -7.5), (25.0, -6.4802), (27.5, -2.5), (25.0, -1.4802), (27.5, 2.5), (25.0, 3.5198), (27.5, 7.5), (25.0, 8.5198), (27.5, 12.5), (25.0, 13.5198), (27.5, 17.5), (22.5, 17.5), (20.0, 13.5198), (22.5, 12.5), (20.0, 8.5198), (22.5, 7.5), (20.0, 3.5198), (22.5, 2.5), (20.0, -1.4802), (22.5, -2.5), (20.0, -6.4802), (22.5, -7.5), (20.0, -11.4802), (22.5, -12.5), (20.0, -16.4802), (22.5, -17.5), (17.5, -17.5), (15.0, -16.4802), (17.5, -12.5), (15.0, -11.4802), (17.5, -7.5), (15.0, -6.4802), (17.5, -2.5), (15.0, -1.4802), (17.5, 2.5), (15.0, 3.5198), (17.5, 7.5), (15.0, 8.5198), (17.5, 12.5), (15.0, 13.5198), (17.5, 17.5), (12.5, 17.5), (10.0, 13.5198), (12.5, 12.5), (10.0, 8.5198), (12.5, 7.5), (10.0, 3.5198), (12.5, 2.5), (10.0, -1.4802), (12.5, -2.5), (10.0, -6.4802), (12.5, -7.5), (10.0, -11.4802), (12.5, -12.5), (10.0, -16.4802), (12.5, -17.5), (7.5, -17.5), (5.0, -16.4802), (7.5, -12.5), (5.0, -11.4802), (7.5, -7.5), (5.0, -6.4802), (7.5, -2.5), (5.0, -1.4802), (7.5, 2.5), (5.0, 3.5198), (7.5, 7.5), (5.0, 8.5198), (7.5, 12.5), (5.0, 13.5198), (7.5, 17.5), (2.5, 17.5), (0.0, 13.5198), (2.5, 12.5), (0.0, 8.5198), (2.5, 7.5), (0.0, 3.5198), (2.5, 2.5), (0.0, -1.4802), (2.5, -2.5), (0.0, -6.4802), (2.5, -7.5), (0.0, -11.4802), (2.5, -12.5), (0.0, -16.4802), (2.5, -17.5), (-2.5, -17.5), (-5.0, -16.4802), (-2.5, -12.5), (-5.0, -11.4802), (-2.5, -7.5), (-5.0, -6.4802), (-2.5, -2.5), (-5.0, -1.4802), (-2.5, 2.5), (-5.0, 3.5198), (-2.5, 7.5), (-5.0, 8.5198), (-2.5, 12.5), (-5.0, 13.5198), (-2.5, 17.5), (-7.5, 17.5), (-10.0, 13.5198), (-7.5, 12.5), (-10.0, 8.5198), (-7.5, 7.5), (-10.0, 3.5198), (-7.5, 2.5), (-10.0, -1.4802), (-7.5, -2.5), (-10.0, -6.4802), (-7.5, -7.5), (-10.0, -11.4802), (-7.5, -12.5), (-10.0, -16.4802), (-7.5, -17.5), (-12.5, -17.5), (-15.0, -16.4802), (-12.5, -12.5), (-15.0, -11.4802), (-12.5, -7.5), (-15.0, -6.4802), (-12.5, -2.5), (-15.0, -1.4802), (-12.5, 2.5), (-15.0, 3.5198), (-12.5, 7.5), (-15.0, 8.5198), (-12.5, 12.5), (-15.0, 13.5198), (-12.5, 17.5), (-17.5, 17.5), (-20.0, 13.5198), (-17.5, 12.5), (-20.0, 8.5198), (-17.5, 7.5), (-20.0, 3.5198), (-17.5, 2.5), (-20.0, -1.4802), (-17.5, -2.5), (-20.0, -6.4802), (-17.5, -7.5), (-20.0, -11.4802), (-17.5, -12.5), (-20.0, -16.4802), (-17.5, -17.5), (-22.5, -17.5), (-25.0, -16.4802), (-22.5, -12.5), (-25.0, -11.4802), (-22.5, -7.5), (-25.0, -6.4802), (-22.5, -2.5), (-25.0, -1.4802), (-22.5, 2.5), (-25.0, 3.5198), (-22.5, 7.5), (-25.0, 8.5198), (-22.5, 12.5), (-25.0, 13.5198), (-22.5, 17.5), (-27.5, 17.5), (-30.0, 13.5198), (-27.5, 12.5), (-30.0, 8.5198), (-27.5, 7.5), (-30.0, 3.5198), (-27.5, 2.5), (-30.0, -1.4802), (-27.5, -2.5), (-30.0, -6.4802), (-27.5, -7.5), (-30.0, -11.4802), (-27.5, -12.5), (-30.0, -16.4802), (-27.5, -17.5), (-32.5, -17.5), (-35.0, -16.4802), (-32.5, -12.5), (-35.0, -11.4802), (-32.5, -7.5), (-35.0, -6.4802), (-32.5, -2.5), (-35.0, -1.4802), (-32.5, 2.5), (-35.0, 3.5198), (-32.5, 7.5), (-35.0, 8.5198), (-32.5, 12.5), (-35.0, 13.5198), (-32.5, 17.5), (-37.5, 17.5), (-40.0, 13.5198), (-37.5, 12.5), (-40.0, 8.5198), (-37.5, 7.5), (-40.0, 3.5198), (-37.5, 2.5), (-40.0, -1.4802), (-37.5, -2.5), (-40.0, -6.4802), (-37.5, -7.5), (-40.0, -11.4802), (-37.5, -12.5), (-40.0, -16.4802), (-37.5, -17.5), (-42.5, -17.5), (-45.0, -16.4802), (-42.5, -12.5), (-45.0, -11.4802), (-42.5, -7.5), (-45.0, -6.4802), (-42.5, -2.5), (-45.0, -1.4802), (-42.5, 2.5), (-45.0, 3.5198), (-42.5, 7.5), (-45.0, 8.5198), (-42.5, 12.5), (-45.0, 13.5198), (-42.5, 17.5), (-47.5, 17.5), (-50.0, 13.5198), (-47.5, 12.5), (-50.0, 8.5198), (-47.5, 7.5), (-50.0, 3.5198), (-47.5, 2.5), (-50.0, -1.4802), (-47.5, -2.5), (-50.0, -6.4802), (-47.5, -7.5), (-50.0, -11.4802), (-47.5, -12.5), (-50.0, -16.4802), (-47.5, -17.5), (-52.5, -17.5), (-55.0, -16.4802), (-52.5, -12.5), (-55.0, -11.4802), (-52.5, -7.5), (-55.0, -6.4802), (-52.5, -2.5), (-55.0, -1.4802), (-52.5, 2.5), (-55.0, 3.5198), (-52.5, 7.5), (-55.0, 8.5198), (-52.5, 12.5), (-55.0, 13.5198), (-52.5, 17.5)]

# Find intersections
intersections = clip_paths(mask, lines)
intersections2 = clip_paths(mask2, lines2)

# Updating arrays with appropriate z-values
mask = add_z_coordinate(mask, 0)
lines = add_z_coordinate(lines, 0)
intersections = add_z_coordinate(intersections, 0)
mask2 = add_z_coordinate(mask2, 30)
lines2 = add_z_coordinate(lines2, 30)
intersection2 = add_z_coordinate(intersections2, 30)

# Plotting
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')
# Create a polygon and add it to the plot
# polygon = Poly3DCollection([mask], color='skyblue', alpha=0.5)
# ax.add_collection3d(polygon)
# x, y, z = zip(*mask)

# Optionally, plot the outline
# ax.plot(x + (x[0],), y + (y[0],), z + (z[0],), color='blue')

# plot_segments(ax, mask, 'black', '.')#, 'Boundaries layer 1')
# plot_segments(ax, lines, '#0096BE')#, 'Infill graph layer 1')
plot_segments(ax, intersections, 'blue')#, 'Printing path layer 1')



# Plot closed loops for mask2 and lines2
# plot_segments(ax, mask2, 'black', '.')#, 'Boundaries layer 2')
# plot_segments(ax, lines2, '#FF91ED')#, 'Infill graph layer 2')
plot_segments(ax, intersection2, 'red')#, 'Printing path layer 2')


# Create a polygon and add it to the plot
# polygon = Poly3DCollection([mask2], color='yellow', alpha=0.5)
# ax.add_collection3d(polygon)
# x, y, z = zip(*mask2)

# Optionally, plot the outline
# ax.plot(x + (x[0],), y + (y[0],), z + (z[0],), color='orange')
# # Plot Mask
# x1, y1 = zip(*mask)
# plt.plot(x1, y1, marker='.', label='Boundary 1', color='black')
# x1, y1 = zip(*mask2)
# plt.plot(x1, y1, marker='.', label='Boundary 2', color='grey')
# # Plot print grid
# x2, y2 = zip(*lines)
# plt.plot(x2, y2, marker='.', label='Infill Graph Layer 1', color='yellow')
# x2, y2 = zip(*lines2)
# plt.plot(x2, y2, marker='.', label='Infill Graph Layer 2', color='pink')
# # Plot intersections

# x_int, y_int = zip(*intersections)
# plt.plot(x_int, y_int, marker='o', color='green', label='Intersections')
# x_int, y_int = zip(*intersections2)
# plt.plot(x_int, y_int, marker='o', color='magenta', label='Intersections')

plt.title("Generate Printing Path")
# plt.xlabel("X-axis")
# plt.ylabel("Y-axis")
# plt.axhline(0, color='grey', lw=0.5)
# plt.axvline(0, color='grey', lw=0.5)

ax.set_xlim([-70, 70])
ax.set_ylim([-30, 30])
ax.set_zlim([-10, 30])

ax.set_xlabel('X axis')
ax.set_ylabel('Y axis')
ax.set_zlabel('Z axis')

# plt.grid()
plt.gca().set_aspect('equal', adjustable='box')
# plt.legend()
plt.show()